//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceClient.GetListValues {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GetListValues.IGetListValues")]
    public interface IGetListValues {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_GetCityList", ReplyAction="http://tempuri.org/IGetListValues/Public_GetCityListResponse")]
        System.Collections.Generic.List<BusinessEntites.public_GetCityList> Public_GetCityList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_GetCityList", ReplyAction="http://tempuri.org/IGetListValues/Public_GetCityListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.public_GetCityList>> Public_GetCityListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_GetCategory", ReplyAction="http://tempuri.org/IGetListValues/Public_GetCategoryResponse")]
        System.Collections.Generic.List<BusinessEntites.Public_GetCategory> Public_GetCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_GetCategory", ReplyAction="http://tempuri.org/IGetListValues/Public_GetCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.Public_GetCategory>> Public_GetCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_GetMasterCategory", ReplyAction="http://tempuri.org/IGetListValues/Public_GetMasterCategoryResponse")]
        System.Collections.Generic.List<BusinessEntites.Public_GetMasterCategory> Public_GetMasterCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_GetMasterCategory", ReplyAction="http://tempuri.org/IGetListValues/Public_GetMasterCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.Public_GetMasterCategory>> Public_GetMasterCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_FilterAttractions", ReplyAction="http://tempuri.org/IGetListValues/Public_FilterAttractionsResponse")]
        System.Collections.Generic.List<BusinessEntites.public_FilterAttractions> Public_FilterAttractions(int countryId, System.Collections.Generic.List<BusinessEntites.JsonParameters.CityVisitList> cityVisitList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_FilterAttractions", ReplyAction="http://tempuri.org/IGetListValues/Public_FilterAttractionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.public_FilterAttractions>> Public_FilterAttractionsAsync(int countryId, System.Collections.Generic.List<BusinessEntites.JsonParameters.CityVisitList> cityVisitList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_GetOrderOfAttractionVisit", ReplyAction="http://tempuri.org/IGetListValues/Public_GetOrderOfAttractionVisitResponse")]
        System.Collections.Generic.List<BusinessEntites.GetOrderOfAttractionVisit> Public_GetOrderOfAttractionVisit(int TravelModeId, int SourceAttractionID, int DestinationAttractionID, System.Collections.Generic.List<BusinessEntites.userTable_OnlyId> AttractionID, string StartDate, string StartTime, System.Collections.Generic.List<BusinessEntites.GetOrderOfAttractionVisit> listGetOrderOfAttractionVisit, int CountryId, System.Collections.Generic.List<BusinessEntites.Users.UserTable_UpdatedBreaks> userTable_UpdatedBreaks, System.Collections.Generic.List<BusinessEntites.Users.UserTable_AttractionRequestOrder> userTable_AttractionRequestOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Public_GetOrderOfAttractionVisit", ReplyAction="http://tempuri.org/IGetListValues/Public_GetOrderOfAttractionVisitResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.GetOrderOfAttractionVisit>> Public_GetOrderOfAttractionVisitAsync(int TravelModeId, int SourceAttractionID, int DestinationAttractionID, System.Collections.Generic.List<BusinessEntites.userTable_OnlyId> AttractionID, string StartDate, string StartTime, System.Collections.Generic.List<BusinessEntites.GetOrderOfAttractionVisit> listGetOrderOfAttractionVisit, int CountryId, System.Collections.Generic.List<BusinessEntites.Users.UserTable_UpdatedBreaks> userTable_UpdatedBreaks, System.Collections.Generic.List<BusinessEntites.Users.UserTable_AttractionRequestOrder> userTable_AttractionRequestOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/GetAttractionOpenTime", ReplyAction="http://tempuri.org/IGetListValues/GetAttractionOpenTimeResponse")]
        System.Collections.Generic.List<BusinessEntites.GetAttractionOpenTime> GetAttractionOpenTime(int AttractionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/GetAttractionOpenTime", ReplyAction="http://tempuri.org/IGetListValues/GetAttractionOpenTimeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.GetAttractionOpenTime>> GetAttractionOpenTimeAsync(int AttractionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Scheduler_GetExtraCategoryList", ReplyAction="http://tempuri.org/IGetListValues/Scheduler_GetExtraCategoryListResponse")]
        System.Collections.Generic.List<BusinessEntites.Scheduler.GoogleTypes> Scheduler_GetExtraCategoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/Scheduler_GetExtraCategoryList", ReplyAction="http://tempuri.org/IGetListValues/Scheduler_GetExtraCategoryListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.Scheduler.GoogleTypes>> Scheduler_GetExtraCategoryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/public_AttractionsPhotoInfo", ReplyAction="http://tempuri.org/IGetListValues/public_AttractionsPhotoInfoResponse")]
        System.Collections.Generic.List<BusinessEntites.Users.AttractionPhotoReference> public_AttractionsPhotoInfo(int countryId, int attractionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetListValues/public_AttractionsPhotoInfo", ReplyAction="http://tempuri.org/IGetListValues/public_AttractionsPhotoInfoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.Users.AttractionPhotoReference>> public_AttractionsPhotoInfoAsync(int countryId, int attractionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetListValuesChannel : ServiceClient.GetListValues.IGetListValues, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListValuesClient : System.ServiceModel.ClientBase<ServiceClient.GetListValues.IGetListValues>, ServiceClient.GetListValues.IGetListValues {
        
        public GetListValuesClient() {
        }
        
        public GetListValuesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetListValuesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetListValuesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetListValuesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BusinessEntites.public_GetCityList> Public_GetCityList() {
            return base.Channel.Public_GetCityList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.public_GetCityList>> Public_GetCityListAsync() {
            return base.Channel.Public_GetCityListAsync();
        }
        
        public System.Collections.Generic.List<BusinessEntites.Public_GetCategory> Public_GetCategory() {
            return base.Channel.Public_GetCategory();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.Public_GetCategory>> Public_GetCategoryAsync() {
            return base.Channel.Public_GetCategoryAsync();
        }
        
        public System.Collections.Generic.List<BusinessEntites.Public_GetMasterCategory> Public_GetMasterCategory() {
            return base.Channel.Public_GetMasterCategory();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.Public_GetMasterCategory>> Public_GetMasterCategoryAsync() {
            return base.Channel.Public_GetMasterCategoryAsync();
        }
        
        public System.Collections.Generic.List<BusinessEntites.public_FilterAttractions> Public_FilterAttractions(int countryId, System.Collections.Generic.List<BusinessEntites.JsonParameters.CityVisitList> cityVisitList) {
            return base.Channel.Public_FilterAttractions(countryId, cityVisitList);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.public_FilterAttractions>> Public_FilterAttractionsAsync(int countryId, System.Collections.Generic.List<BusinessEntites.JsonParameters.CityVisitList> cityVisitList) {
            return base.Channel.Public_FilterAttractionsAsync(countryId, cityVisitList);
        }
        
        public System.Collections.Generic.List<BusinessEntites.GetOrderOfAttractionVisit> Public_GetOrderOfAttractionVisit(int TravelModeId, int SourceAttractionID, int DestinationAttractionID, System.Collections.Generic.List<BusinessEntites.userTable_OnlyId> AttractionID, string StartDate, string StartTime, System.Collections.Generic.List<BusinessEntites.GetOrderOfAttractionVisit> listGetOrderOfAttractionVisit, int CountryId, System.Collections.Generic.List<BusinessEntites.Users.UserTable_UpdatedBreaks> userTable_UpdatedBreaks, System.Collections.Generic.List<BusinessEntites.Users.UserTable_AttractionRequestOrder> userTable_AttractionRequestOrder) {
            return base.Channel.Public_GetOrderOfAttractionVisit(TravelModeId, SourceAttractionID, DestinationAttractionID, AttractionID, StartDate, StartTime, listGetOrderOfAttractionVisit, CountryId, userTable_UpdatedBreaks, userTable_AttractionRequestOrder);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.GetOrderOfAttractionVisit>> Public_GetOrderOfAttractionVisitAsync(int TravelModeId, int SourceAttractionID, int DestinationAttractionID, System.Collections.Generic.List<BusinessEntites.userTable_OnlyId> AttractionID, string StartDate, string StartTime, System.Collections.Generic.List<BusinessEntites.GetOrderOfAttractionVisit> listGetOrderOfAttractionVisit, int CountryId, System.Collections.Generic.List<BusinessEntites.Users.UserTable_UpdatedBreaks> userTable_UpdatedBreaks, System.Collections.Generic.List<BusinessEntites.Users.UserTable_AttractionRequestOrder> userTable_AttractionRequestOrder) {
            return base.Channel.Public_GetOrderOfAttractionVisitAsync(TravelModeId, SourceAttractionID, DestinationAttractionID, AttractionID, StartDate, StartTime, listGetOrderOfAttractionVisit, CountryId, userTable_UpdatedBreaks, userTable_AttractionRequestOrder);
        }
        
        public System.Collections.Generic.List<BusinessEntites.GetAttractionOpenTime> GetAttractionOpenTime(int AttractionId) {
            return base.Channel.GetAttractionOpenTime(AttractionId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.GetAttractionOpenTime>> GetAttractionOpenTimeAsync(int AttractionId) {
            return base.Channel.GetAttractionOpenTimeAsync(AttractionId);
        }
        
        public System.Collections.Generic.List<BusinessEntites.Scheduler.GoogleTypes> Scheduler_GetExtraCategoryList() {
            return base.Channel.Scheduler_GetExtraCategoryList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.Scheduler.GoogleTypes>> Scheduler_GetExtraCategoryListAsync() {
            return base.Channel.Scheduler_GetExtraCategoryListAsync();
        }
        
        public System.Collections.Generic.List<BusinessEntites.Users.AttractionPhotoReference> public_AttractionsPhotoInfo(int countryId, int attractionId) {
            return base.Channel.public_AttractionsPhotoInfo(countryId, attractionId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BusinessEntites.Users.AttractionPhotoReference>> public_AttractionsPhotoInfoAsync(int countryId, int attractionId) {
            return base.Channel.public_AttractionsPhotoInfoAsync(countryId, attractionId);
        }
    }
}
